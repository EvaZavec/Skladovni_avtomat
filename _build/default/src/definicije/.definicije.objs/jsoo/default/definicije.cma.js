// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.4.0

//# unitInfo: Provides: Definicije
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Definicije = [0];
   runtime.caml_register_global(0, Definicije, "Definicije");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Definicije__Sklad
//# unitInfo: Requires: Stdlib__List, Stdlib__String
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Stdlib_String = global_data.Stdlib__String,
    Stdlib_List = global_data.Stdlib__List,
    prazen_sklad = 0;
   function dodaj_na_sklad(el, sklad){return [0, el, sklad];}
   function iz_sklada(sklad){
    if(! sklad) return 0;
    var rep = sklad[2];
    return rep;
   }
   function sklad_je_prazen(sklad){return 0 === sklad ? 1 : 0;}
   function na_vrhu_sklada(sklad){
    if(! sklad) return 0;
    var el = sklad[1];
    return [0, el];
   }
   function sklad_v_niz(sklad){
    var
     _a_ = caml_call1(Stdlib_String[1], 1),
     _b_ = caml_call2(Stdlib_List[19], _a_, sklad);
    return caml_call2(Stdlib_String[6], cst, _b_);
   }
   var
    Definicije_Sklad =
      [0,
       prazen_sklad,
       dodaj_na_sklad,
       iz_sklada,
       sklad_je_prazen,
       na_vrhu_sklada,
       sklad_v_niz];
   runtime.caml_register_global(3, Definicije_Sklad, "Definicije__Sklad");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Definicije__Stanje
(function(globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function iz_niza(oznaka){return [0, oznaka];}
   function v_niz(param){var oznaka = param[1]; return oznaka;}
   var Definicije_Stanje = [0, iz_niza, v_niz];
   runtime.caml_register_global(0, Definicije_Stanje, "Definicije__Stanje");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Definicije__Avtomat
//# unitInfo: Requires: Definicije__Sklad, Definicije__Stanje, Stdlib__List, Stdlib__Seq, Stdlib__String
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, caml_equal = runtime.caml_equal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_String = global_data.Stdlib__String,
    Definicije_Sklad = global_data.Definicije__Sklad,
    Stdlib_Seq = global_data.Stdlib__Seq,
    Stdlib_List = global_data.Stdlib__List,
    Definicije_Stanje = global_data.Definicije__Stanje,
    cst_Zacetno = "Zacetno",
    cst_Sprejemno = "Sprejemno",
    cst_Napaka = "Napaka",
    _a_ = [0, 40],
    _b_ = [0, 123],
    _c_ = [0, 91],
    _d_ = [0, 40],
    _e_ = [0, 123],
    _f_ = [0, 91],
    _g_ = [0, 40],
    _h_ = [0, 123],
    _i_ = [0, 91],
    _j_ = [0, 40],
    _k_ = [0, 123],
    _l_ = [0, 91],
    _m_ = [0, 40],
    _n_ = [0, 123],
    _o_ = [0, 91],
    _p_ = [0, 40],
    _q_ = [0, 123],
    _r_ = [0, 91];
   function prazen_avtomat(zacetno_stanje){
    return [0, [0, zacetno_stanje, 0], zacetno_stanje, 0, 0];
   }
   function dodaj_nesprejemno_stanje(stanje, avtomat){
    return [0, [0, stanje, avtomat[1]], avtomat[2], avtomat[3], avtomat[4]];
   }
   function dodaj_sprejemno_stanje(stanje, avtomat){
    return [0,
            [0, stanje, avtomat[1]],
            avtomat[2],
            [0, stanje, avtomat[3]],
            avtomat[4]];
   }
   function dodaj_prehod
   (stanje1, znak, vrh_sklada, stanje2, spremeni_sklad, avtomat){
    return [0,
            avtomat[1],
            avtomat[2],
            avtomat[3],
            [0,
             [0, stanje1, znak, vrh_sklada, stanje2, spremeni_sklad],
             avtomat[4]]];
   }
   function prehodna_funkcija(avtomat, stanje, znak, sklad){
    var vrh_sklada = caml_call1(Definicije_Sklad[5], sklad), _X_ = avtomat[4];
    function _Y_(param){
     var
      vrh_sklada$0 = param[3],
      znak$0 = param[2],
      stanje1 = param[1],
      _Z_ = caml_equal(stanje1, stanje);
     if(_Z_)
      var
       ___ = znak === znak$0 ? 1 : 0,
       _$_ = ___ ? caml_equal(vrh_sklada$0, vrh_sklada) : ___;
     else
      var _$_ = _Z_;
     return _$_;
    }
    var match = caml_call2(Stdlib_List[39], _Y_, _X_);
    if(! match) return 0;
    var match$0 = match[1], spremeni_sklad = match$0[5], stanje2 = match$0[4];
    return [0, [0, stanje2, caml_call1(spremeni_sklad, sklad)]];
   }
   function zacetno_stanje(avtomat){return avtomat[2];}
   function seznam_stanj(avtomat){return avtomat[1];}
   function seznam_prehodov(avtomat){return avtomat[4];}
   function je_sprejemno_stanje(avtomat, stanje){
    return caml_call2(Stdlib_List[36], stanje, avtomat[3]);
   }
   var
    zacetno = caml_call1(Definicije_Stanje[1], cst_Zacetno),
    sprejemno = caml_call1(Definicije_Stanje[1], cst_Sprejemno),
    napaka = caml_call1(Definicije_Stanje[1], cst_Napaka),
    _V_ =
      dodaj_nesprejemno_stanje
       (napaka, dodaj_sprejemno_stanje(sprejemno, prazen_avtomat(zacetno))),
    _U_ =
      dodaj_prehod
       (zacetno,
        40,
        0,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 40, sklad);},
        _V_),
    _T_ =
      dodaj_prehod
       (zacetno,
        123,
        0,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 123, sklad);},
        _U_),
    _S_ =
      dodaj_prehod
       (zacetno,
        91,
        0,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 91, sklad);},
        _T_),
    _R_ =
      dodaj_prehod
       (zacetno, 41, 0, napaka, function(sklad){return sklad;}, _S_),
    _Q_ =
      dodaj_prehod
       (zacetno, 125, 0, napaka, function(sklad){return sklad;}, _R_),
    _P_ =
      dodaj_prehod
       (zacetno, 93, 0, napaka, function(sklad){return sklad;}, _Q_),
    _O_ =
      dodaj_prehod
       (sprejemno,
        40,
        0,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 40, sklad);},
        _P_),
    _N_ =
      dodaj_prehod
       (sprejemno,
        40,
        _a_,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 40, sklad);},
        _O_),
    _M_ =
      dodaj_prehod
       (sprejemno,
        40,
        _b_,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 40, sklad);},
        _N_),
    _L_ =
      dodaj_prehod
       (sprejemno,
        40,
        _c_,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 40, sklad);},
        _M_),
    _K_ =
      dodaj_prehod(sprejemno, 41, _d_, sprejemno, Definicije_Sklad[3], _L_),
    _J_ =
      dodaj_prehod
       (sprejemno, 41, _e_, napaka, function(sklad){return sklad;}, _K_),
    _I_ =
      dodaj_prehod
       (sprejemno, 41, _f_, napaka, function(sklad){return sklad;}, _J_),
    _H_ =
      dodaj_prehod
       (sprejemno, 41, 0, napaka, function(sklad){return sklad;}, _I_),
    _G_ =
      dodaj_prehod
       (sprejemno,
        123,
        0,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 123, sklad);},
        _H_),
    _F_ =
      dodaj_prehod
       (sprejemno,
        123,
        _g_,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 123, sklad);},
        _G_),
    _E_ =
      dodaj_prehod
       (sprejemno,
        123,
        _h_,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 123, sklad);},
        _F_),
    _D_ =
      dodaj_prehod
       (sprejemno,
        123,
        _i_,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 123, sklad);},
        _E_),
    _C_ =
      dodaj_prehod
       (sprejemno, 125, _j_, napaka, function(sklad){return sklad;}, _D_),
    _B_ =
      dodaj_prehod(sprejemno, 125, _k_, sprejemno, Definicije_Sklad[3], _C_),
    _A_ =
      dodaj_prehod
       (sprejemno, 125, _l_, napaka, function(sklad){return sklad;}, _B_),
    _z_ =
      dodaj_prehod
       (sprejemno, 125, 0, napaka, function(sklad){return sklad;}, _A_),
    _y_ =
      dodaj_prehod
       (sprejemno,
        91,
        0,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 91, sklad);},
        _z_),
    _x_ =
      dodaj_prehod
       (sprejemno,
        91,
        _m_,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 91, sklad);},
        _y_),
    _w_ =
      dodaj_prehod
       (sprejemno,
        91,
        _n_,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 91, sklad);},
        _x_),
    _v_ =
      dodaj_prehod
       (sprejemno,
        91,
        _o_,
        sprejemno,
        function(sklad){return caml_call2(Definicije_Sklad[2], 91, sklad);},
        _w_),
    _u_ =
      dodaj_prehod
       (sprejemno, 93, _p_, napaka, function(sklad){return sklad;}, _v_),
    _t_ =
      dodaj_prehod
       (sprejemno, 93, _q_, napaka, function(sklad){return sklad;}, _u_),
    _s_ =
      dodaj_prehod(sprejemno, 93, _r_, sprejemno, Definicije_Sklad[3], _t_),
    gnezdenje_oklepajev =
      dodaj_prehod
       (sprejemno, 93, 0, napaka, function(sklad){return sklad;}, _s_);
   function preberi_niz(avtomat, q, niz){
    function aux(acc, znak){
     if(! acc) return 0;
     var match = acc[1], sklad = match[2], q = match[1];
     return prehodna_funkcija(avtomat, q, znak, sklad);
    }
    var _W_ = caml_call1(Stdlib_String[39], niz);
    return caml_call1
            (caml_call2(Stdlib_Seq[5], aux, [0, [0, q, Definicije_Sklad[1]]]),
             _W_);
   }
   var
    Definicije_Avtomat =
      [0,
       prazen_avtomat,
       dodaj_nesprejemno_stanje,
       dodaj_sprejemno_stanje,
       dodaj_prehod,
       prehodna_funkcija,
       zacetno_stanje,
       seznam_stanj,
       seznam_prehodov,
       je_sprejemno_stanje,
       gnezdenje_oklepajev,
       preberi_niz];
   runtime.caml_register_global(26, Definicije_Avtomat, "Definicije__Avtomat");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Definicije__Trak
//# unitInfo: Requires: Stdlib__String
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    caml_ml_string_length = runtime.caml_ml_string_length;
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Stdlib_String = global_data.Stdlib__String;
   function trenutni_znak(trak){
    return runtime.caml_string_get(trak[1], trak[2]);
   }
   function je_na_koncu(trak){
    return caml_ml_string_length(trak[1]) === trak[2] ? 1 : 0;
   }
   function premakni_naprej(trak){return [0, trak[1], trak[2] + 1 | 0];}
   function iz_niza(niz){return [0, niz, 0];}
   var prazen = iz_niza(cst);
   function v_niz(trak){return trak[1];}
   function prebrani(trak){
    return caml_call3(Stdlib_String[15], trak[1], 0, trak[2]);
   }
   function neprebrani(trak){
    return caml_call3
            (Stdlib_String[15],
             trak[1],
             trak[2],
             caml_ml_string_length(trak[1]) - trak[2] | 0);
   }
   var
    Definicije_Trak =
      [0,
       prazen,
       trenutni_znak,
       je_na_koncu,
       premakni_naprej,
       iz_niza,
       v_niz,
       prebrani,
       neprebrani];
   runtime.caml_register_global(2, Definicije_Trak, "Definicije__Trak");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Definicije__ZagnaniAvtomat
//# unitInfo: Requires: Definicije__Avtomat, Definicije__Sklad, Definicije__Trak
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Definicije_Avtomat = global_data.Definicije__Avtomat,
    Definicije_Sklad = global_data.Definicije__Sklad,
    Definicije_Trak = global_data.Definicije__Trak;
   function pozeni(avtomat, trak){
    var _c_ = Definicije_Sklad[1];
    return [0, avtomat, trak, caml_call1(Definicije_Avtomat[6], avtomat), _c_];
   }
   function avtomat(param){var avtomat = param[1]; return avtomat;}
   function trak(param){var trak = param[2]; return trak;}
   function stanje(param){var stanje = param[3]; return stanje;}
   function sklad(param){var sklad = param[4]; return sklad;}
   function korak_naprej(param){
    var
     sklad = param[4],
     stanje = param[3],
     trak = param[2],
     avtomat = param[1];
    if(caml_call1(Definicije_Trak[3], trak)) return 0;
    var
     _b_ = caml_call1(Definicije_Trak[2], trak),
     match = caml_call4(Definicije_Avtomat[5], avtomat, stanje, _b_, sklad);
    if(! match) return 0;
    var match$0 = match[1], nov_sklad = match$0[2], novo_stanje = match$0[1];
    return [0,
            [0,
             avtomat,
             caml_call1(Definicije_Trak[4], trak),
             novo_stanje,
             nov_sklad]];
   }
   function je_v_sprejemnem_stanju(param){
    var
     sklad = param[4],
     stanje = param[3],
     avtomat = param[1],
     _a_ = caml_call2(Definicije_Avtomat[9], avtomat, stanje);
    return _a_ ? caml_call1(Definicije_Sklad[4], sklad) : _a_;
   }
   var
    Definicije_ZagnaniAvtomat =
      [0,
       pozeni,
       avtomat,
       trak,
       stanje,
       sklad,
       korak_naprej,
       je_v_sprejemnem_stanju];
   runtime.caml_register_global
    (3, Definicije_ZagnaniAvtomat, "Definicije__ZagnaniAvtomat");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
